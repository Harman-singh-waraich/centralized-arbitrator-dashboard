{"ast":null,"code":"import web3 from './web3';\nimport multipleArbitrableTransaction from 'kleros-interaction/build/contracts/MultipleArbitrableTransaction.json';\nimport arbitrable from 'kleros-interaction/build/contracts/Arbitrable.json';\nconsole.log(web3);\nexport var arbitrableInstance = new web3.eth.Contract(multipleArbitrableTransaction.abi, '0x40EA6D371a0f8F78b9eed75D2b309B4ACEbbad29', {\n  gasPrice: 20000000000\n});\nexport var arbitrableInstanceAt = function arbitrableInstanceAt(address) {\n  return new web3.eth.Contract(multipleArbitrableTransaction.abi, address, {\n    gasPrice: 20000000000\n  });\n};\nconsole.log(arbitrableInstance);","map":{"version":3,"sources":["/home/u/repos/arbitrator-integration-demo/src/ethereum/multipleArbitrableTransaction.js"],"names":["web3","multipleArbitrableTransaction","arbitrable","console","log","arbitrableInstance","eth","Contract","abi","gasPrice","arbitrableInstanceAt","address"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,6BAAP,MAA0C,uEAA1C;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AAEAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,OAAO,IAAMK,kBAAkB,GAAG,IAAIL,IAAI,CAACM,GAAL,CAASC,QAAb,CAChCN,6BAA6B,CAACO,GADE,EAEhC,4CAFgC,EAGhC;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAHgC,CAA3B;AAMP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAa;AAC/C,SAAO,IAAIX,IAAI,CAACM,GAAL,CAASC,QAAb,CAAsBN,6BAA6B,CAACO,GAApD,EAAyDG,OAAzD,EAAkE;AAACF,IAAAA,QAAQ,EAAE;AAAX,GAAlE,CAAP;AACD,CAFM;AAIPN,OAAO,CAACC,GAAR,CAAYC,kBAAZ","sourcesContent":["import web3 from './web3'\nimport multipleArbitrableTransaction from 'kleros-interaction/build/contracts/MultipleArbitrableTransaction.json'\nimport arbitrable from 'kleros-interaction/build/contracts/Arbitrable.json'\n\nconsole.log(web3)\n\nexport const arbitrableInstance = new web3.eth.Contract(\n  multipleArbitrableTransaction.abi,\n  '0x40EA6D371a0f8F78b9eed75D2b309B4ACEbbad29',\n  {gasPrice: 20000000000}\n)\n\nexport const arbitrableInstanceAt = (address) => {\n  return new web3.eth.Contract(multipleArbitrableTransaction.abi, address, {gasPrice: 20000000000})\n}\n\nconsole.log(arbitrableInstance)\n"]},"metadata":{},"sourceType":"module"}