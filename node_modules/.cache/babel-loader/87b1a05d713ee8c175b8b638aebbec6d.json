{"ast":null,"code":"import _classCallCheck from \"/home/u/repos/arbitrator-integration-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/u/repos/arbitrator-integration-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/u/repos/arbitrator-integration-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/u/repos/arbitrator-integration-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/u/repos/arbitrator-integration-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/u/repos/arbitrator-integration-demo/src/Dispute.js\";\nimport web3 from './ethereum/web3';\nimport React from 'react';\nimport DisputeDetail from './DisputeDetail';\n\nvar Dispute =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dispute, _React$Component);\n\n  function Dispute(props) {\n    var _this;\n\n    _classCallCheck(this, Dispute);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dispute).call(this, props));\n\n    _this.disputeStatusToString = function (code) {\n      switch (code) {\n        case \"0\":\n          return \"Waiting\";\n          break;\n\n        case \"1\":\n          return \"Appealable\";\n          break;\n\n        case \"2\":\n          return \"Solved\";\n          break;\n\n        default:\n          return \"Translation error.\";\n      }\n    };\n\n    console.log(props);\n    return _this;\n  }\n\n  _createClass(Dispute, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.arbitrable), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.choices), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, web3.utils.fromWei(this.props.fee, 'ether')), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.ruling), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.status));\n    }\n  }]);\n\n  return Dispute;\n}(React.Component);\n\nexport default Dispute;","map":{"version":3,"sources":["/home/u/repos/arbitrator-integration-demo/src/Dispute.js"],"names":["web3","React","DisputeDetail","Dispute","props","disputeStatusToString","code","console","log","id","arbitrable","choices","utils","fromWei","fee","ruling","status","Component"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAEMC,O;;;;;AAEN,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,iFAAMA,KAAN;;AADgB,UAKlBC,qBALkB,GAKM,UAACC,IAAD,EAAU;AAChC,cAAQA,IAAR;AACE,aAAK,GAAL;AACE,iBAAO,SAAP;AACA;;AACF,aAAK,GAAL;AACE,iBAAO,YAAP;AACA;;AACF,aAAK,GAAL;AACE,iBAAO,QAAP;AACA;;AAEF;AACE,iBAAO,oBAAP;AAZJ;AAeD,KArBiB;;AAEhBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAFgB;AAGjB;;;;6BAoBS;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKA,KAAL,CAAWK,EAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKL,KAAL,CAAWM,UAAhB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKN,KAAL,CAAWO,OAAhB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKX,IAAI,CAACY,KAAL,CAAWC,OAAX,CAAmB,KAAKT,KAAL,CAAWU,GAA9B,EAAmC,OAAnC,CAAL,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKV,KAAL,CAAWW,MAAhB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKX,KAAL,CAAWY,MAAhB,CANF,CADF;AAUD;;;;EApCmBf,KAAK,CAACgB,S;;AAuC5B,eAAed,OAAf","sourcesContent":["import web3 from './ethereum/web3'\n\nimport React from 'react';\nimport DisputeDetail from './DisputeDetail'\n\nclass Dispute extends React.Component {\n\nconstructor(props){\n  super(props)\n  console.log(props)\n}\n\ndisputeStatusToString = (code) => {\n  switch (code) {\n    case \"0\":\n      return \"Waiting\"\n      break;\n    case \"1\":\n      return \"Appealable\"\n      break;\n    case \"2\":\n      return \"Solved\"\n      break;\n\n    default:\n      return \"Translation error.\"\n  }\n\n}\n\n  render(){\n    return (\n      <tr>\n        <td>{this.props.id}</td>\n        <td>{this.props.arbitrable}</td>\n        <td>{this.props.choices}</td>\n        <td>{web3.utils.fromWei(this.props.fee, 'ether')}</td>\n        <td>{this.props.ruling}</td>\n        <td>{this.props.status}</td>\n      </tr>\n    )\n  }\n}\n\nexport default Dispute\n"]},"metadata":{},"sourceType":"module"}